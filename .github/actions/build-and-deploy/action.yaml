---
name: Build and Deploy
inputs:
  project:
    description: "Project folder under ./projects containing values.yaml"
    required: false
    default: ''
  suffix:
    description: "Optional suffix appended to the ephemeral folder name"
    required: false
    default: ''
  backend-dir:
    description: "Path to backend Dockerfile"
    required: false
    default: ./app
  frontend-dir:
    description: "Path to frontend Dockerfile"
    required: false
    default: ./frontend
  registry-token:
    description: "Token used to login to ghcr.io"
    required: false
    default: ${{ github.token }}
runs:
  using: composite
  steps:
    - name: Checkout to ephemeral workspace
      uses: johnhojohn969/setup-ephemeral-action/.github/actions/checkout@main
      with:
        suffix: ${{ inputs.suffix }}
    - name: Log in to GitHub Container Registry
      shell: bash
      run: |
        echo "${{ inputs.registry-token }}" | \
          docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Extract repo name for image prefix
      id: repo
      shell: bash
      run: |
        repo_name=$(basename "${{ github.repository }}")
        echo "name=${repo_name,,}" >> "$GITHUB_OUTPUT"
    - name: Build & Push Backend
      working-directory: ${{ env.WORK_DIR }}
      shell: bash
      run: |
        if [ ! -d "${{ inputs.backend-dir }}" ]; then
        echo "Backend directory '${{ inputs.backend-dir }}' does not exist" \
          >&2
          exit 1
        fi
        IMAGE_PREFIX="ghcr.io/${{ github.repository_owner }}"
        IMAGE_PREFIX="$IMAGE_PREFIX/${{ steps.repo.outputs.name }}"
        docker build \
          -t "$IMAGE_PREFIX-backend:latest" \
          ${{ inputs.backend-dir }}
        docker push "$IMAGE_PREFIX-backend:latest"
    - name: Build & Push Frontend
      working-directory: ${{ env.WORK_DIR }}
      shell: bash
      run: |
        if [ ! -d "${{ inputs.frontend-dir }}" ]; then
        echo "Frontend directory '${{ inputs.frontend-dir }}' does not exist" \
          >&2
          exit 1
        fi
        IMAGE_PREFIX="ghcr.io/${{ github.repository_owner }}"

        IMAGE_PREFIX="$IMAGE_PREFIX/${{ steps.repo.outputs.name }}"
        docker build \
          -t "$IMAGE_PREFIX-frontend:latest" \
          ${{ inputs.frontend-dir }}
        docker push "$IMAGE_PREFIX-frontend:latest"
    - name: Determine project name
      working-directory: ${{ env.WORK_DIR }}
      id: vars
      shell: bash
      run: |
        if [ -n "${{ inputs.project }}" ]; then
          echo "name=${{ inputs.project }}" >> "$GITHUB_OUTPUT"
        else
          echo "name=$(basename ${{ github.repository }})" >> "$GITHUB_OUTPUT"
        fi
    - name: Deploy with Helm
      working-directory: ${{ env.WORK_DIR }}
      shell: bash
      run: |
        helm upgrade --install ${{ steps.vars.outputs.name }} \
          oci://ghcr.io/johnhojohn969/generic-app \
          -f ./projects/${{ steps.vars.outputs.name }}/values.yaml \
          --namespace ${{ steps.vars.outputs.name }} \
          --create-namespace
